@model PilotSmithApp.UserInterface.Models.CustomerViewModel
@using (Ajax.BeginForm("InsertUpdateCustomer", "Customer", new AjaxOptions { HttpMethod = "POST", Confirm = "", OnSuccess = "SaveSuccessCustomer", OnFailure = "NetworkFailure", AllowCache = false, LoadingElementId = "", OnBegin = "OnServerCallBegin", OnComplete = "OnServerCallComplete" }, new { @class = "form-horizontal", role = "form", @id = "CustomerForm" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.IsUpdate, htmlAttributes: new { @class = "" })
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ID, htmlAttributes: new { @class = ""})
    <div class="col-md-11 divbox1">
        <div class="col-md-12 divbox2">
            <div class="col-md-12 headSeperator"> Head Details</div>
            <div class="form-group col-md-12">
                <div class="col-md-6 no-padding">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.CompanyName, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control BlockEnter newinput", @autofocus = true } })
                        @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-3">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.IsInternalComp, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-12">
                        @{
                            List<SelectListItem> dropdownList = new List<SelectListItem>();
                            dropdownList.Add(new SelectListItem
                            { Text = "No", Value = "false", Selected = true });
                            dropdownList.Add(new SelectListItem
                            { Text = "Yes", Value = "true" });
                        }
                        @Html.DropDownListFor(model => model.IsInternalComp, dropdownList, new { @class = "form-control BlockEnter newinput", style = "padding:4px 12px;", @id = "IsInternalComp" })
                    </div>
                </div>
            </div>
            <div class="col-md-12">&nbsp;</div>
        </div>
    </div>
    <div class="col-md-11 divbox1">
        <div class="col-md-12 divbox2">
            <div class="col-md-12 headSeperator"> Contact Details</div>
            <div class="form-group col-md-12">
                <div class="col-md-2 no-padding">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.ContactTitle, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-12">
                        @Html.DropDownListFor(model => model.ContactTitle, Model.TitlesList, "-- select title --", new { @class = "form-control BlockEnter newinput", value = -1, style = "padding:4px 12px;" })
                        @Html.ValidationMessageFor(model => model.ContactTitle, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-4 no-padding">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.ContactPerson, htmlAttributes: new { @class = "control-label " })
                    </div>
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.ContactPerson, new { htmlAttributes = new { @class = "form-control BlockEnter newinput" } })
                        @Html.ValidationMessageFor(model => model.ContactPerson, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-5">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.ContactEmail, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.ContactEmail, new { htmlAttributes = new { @class = "form-control BlockEnter newinput", } })
                        @Html.ValidationMessageFor(model => model.ContactEmail, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-group col-md-12">
                <div class="col-md-6 no-padding">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.Website, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Website, new { htmlAttributes = new { @class = "form-control BlockEnter newinput" } })
                        @Html.ValidationMessageFor(model => model.Website, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-group col-md-12">
                <div class="col-md-3 no-left-padding">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.LandLine, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.LandLine, new { htmlAttributes = new { @class = "form-control BlockEnter newinput" } })
                        @Html.ValidationMessageFor(model => model.LandLine, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-3 no-right-padding">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label " })
                    </div>
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control BlockEnter newinput" } })
                        @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.Fax, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Fax, new { htmlAttributes = new { @class = "form-control BlockEnter newinput", onkeypress = "return isNumber(event)" } })
                        @Html.ValidationMessageFor(model => model.Fax, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.OtherPhoneNos, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.OtherPhoneNos, new { htmlAttributes = new { @class = "form-control BlockEnter newinput", } })
                        @Html.ValidationMessageFor(model => model.OtherPhoneNos, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-12">&nbsp;</div>
        </div>
    </div>
    <div class="col-md-11 divbox1">
        <div class="col-md-12 divbox2">
            <div class="col-md-12 headSeperator"> Addresses</div>
            <div class="form-group col-md-12">
                <div class="col-md-6 no-padding">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.BillingAddress, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-12">
                        @Html.TextAreaFor(model => model.BillingAddress, 5, 60, new { @class = "form-control HeaderBox BlockEnter newinput" })
                        @Html.ValidationMessageFor(model => model.BillingAddress, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.ShippingAddress, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-12">
                        @Html.TextAreaFor(model => model.ShippingAddress, 5, 60, new { @class = "form-control HeaderBox BlockEnter multiline4 newinput" })
                        @Html.ValidationMessageFor(model => model.ShippingAddress, "", new { @class = "text-danger" })
                    </div>

                </div>
            </div>
            <div class="col-md-12">&nbsp;</div>
        </div>
    </div>
    <div class="col-md-11 divbox1">
        <div class="col-md-12 divbox2">
            <div class="col-md-12 headSeperator"> Other Details</div>
            <div class="form-group col-md-12">
                <div class="col-md-6 no-padding">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.PaymentTermCode, htmlAttributes: new { @class = "control-label " })
                    </div>
                    <div class="col-md-12">
                            @Html.DropDownListFor(model => model.PaymentTermCode, Model.DefaultPaymentTermList, "-- Select Payment Term --", new { @class = "form-control BlockEnter newinput", value = -1, style = "padding:4px 12px;" })
                            @Html.ValidationMessageFor(model => model.PaymentTermCode, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.TaxRegNo, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-12">
                            @Html.EditorFor(model => model.TaxRegNo, new { htmlAttributes = new { @class = "form-control BlockEnter newinput" } })
                            @Html.ValidationMessageFor(model => model.TaxRegNo, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-3 no-right-padding">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.PANNO, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-12">
                            @Html.EditorFor(model => model.PANNO, new { htmlAttributes = new { @class = "form-control BlockEnter newinput" } })
                            @Html.ValidationMessageFor(model => model.PANNO, "", new { @class = "text-danger" })
                    </div>

                </div>
            </div>
            <div class="form-group col-md-12">
                <div class="col-md-12 no-left-padding">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.GeneralNotes, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-12">
                            @Html.TextAreaFor(model => model.GeneralNotes, 5, 145, new { @class = "form-control BlockEnter multiline4 newinput" })
                            @Html.ValidationMessageFor(model => model.GeneralNotes, "", new { @class = "text-danger" })
                    </div>

                </div>
            </div>
            <div class="col-md-12">&nbsp;</div>
            </div>
        </div>
    <div class="col-md-12">&nbsp;</div>
    <div class="col-md-12">&nbsp;</div>
    <div class="col-md-12">&nbsp;</div>
    <div class="form-group" hidden="hidden">
        <div class="col-md-offset-2 col-md-10">
            <input id="btnInsertUpdateCustomer" type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
}
<script>
    $(document).ready(function () {
        $.validator.unobtrusive.parse("#CustomerForm");
    });
</script>

