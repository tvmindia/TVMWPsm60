@model PilotSmithApp.UserInterface.Models.EnquiryFollowupViewModel
@using (Ajax.BeginForm("InsertUpdateEnquiryFollowup", "EnquiryFollowup", null, new AjaxOptions { HttpMethod = "POST", Confirm = "", OnSuccess = "SaveSuccessEnquiryFollowup", OnFailure = "NetworkFailure", AllowCache = false, LoadingElementId = "", OnBegin = "OnMasterBegin", OnComplete = "OnMasterComplete" }, new { @class = "form-horizontal", role = "form", id = "FormEnquiryFollowup123" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.IsUpdate, htmlAttributes: new { @class = "" })
    @Html.HiddenFor(model => model.ID, htmlAttributes: new { @class = "" })
    @Html.HiddenFor(model => model.EnquiryID, htmlAttributes: new { @class = "" })
    <div class="form-group col-md-12 no-padding">
        <div class="col-md-6 no-padding">
            <div class="col-md-12">
                @Html.LabelFor(model => model.FollowupDateFormatted, htmlAttributes: new { @class = "control-label " })
            </div>
            <div class="col-md-12">
                @Html.EditorFor(model => model.FollowupDateFormatted, new { htmlAttributes = new { @class = "form-control newinput datepicker" } })
                @Html.ValidationMessageFor(model => model.FollowupDateFormatted, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6 no-padding">
            <div class="col-md-12">
                @Html.LabelFor(model => model.FollowupTimeFormatted, htmlAttributes: new { @class = "control-label " })
            </div>
            <div class="col-md-12">
                @Html.EditorFor(model => model.FollowupTimeFormatted, new { htmlAttributes = new { @class = "form-control newinput" } })
                @Html.ValidationMessageFor(model => model.FollowupDateFormatted, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-12 no-padding">
            <div class="col-md-12">
                @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label " })
            </div>
            <div class="col-md-12">
                @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control newinput" } })
                @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6 no-padding">
            <div class="col-md-12">
                @Html.LabelFor(model => model.PriorityCode, htmlAttributes: new { @class = "control-label " })
            </div>
            <div class="col-md-12">
                @Html.EditorFor(model => model.PriorityCode, new { htmlAttributes = new { @class = "form-control newinput" } })
                @Html.ValidationMessageFor(model => model.PriorityCode, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6 no-padding">
            <div class="col-md-12">
                @Html.LabelFor(model => model.ContactName, htmlAttributes: new { @class = "control-label " })
            </div>
            <div class="col-md-12">
                @Html.EditorFor(model => model.ContactName, new { htmlAttributes = new { @class = "form-control newinput" } })
                @Html.ValidationMessageFor(model => model.ContactName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6 no-padding">
            <div class="col-md-12">
                @Html.LabelFor(model => model.ContactNo, htmlAttributes: new { @class = "control-label " })
            </div>
            <div class="col-md-12">
                @Html.EditorFor(model => model.ContactNo, new { htmlAttributes = new { @class = "form-control newinput" } })
                @Html.ValidationMessageFor(model => model.ContactNo, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6 no-padding">
            <div class="col-md-12">
                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label " })
            </div>
            <div class="col-md-12">
                @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control newinput" } })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6 no-padding">
            <div class="col-md-12">
                @Html.LabelFor(model => model.RemindPriorTo, htmlAttributes: new { @class = "control-label " })
            </div>
            <div class="col-md-12">
                @Html.EditorFor(model => model.RemindPriorTo, new { htmlAttributes = new { @class = "form-control newinput" } })
                @Html.ValidationMessageFor(model => model.ContactName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6 no-padding">
            <div class="col-md-12">
                @Html.LabelFor(model => model.ReminderType, htmlAttributes: new { @class = "control-label " })
            </div>
            <div class="col-md-12">
                @Html.EditorFor(model => model.ReminderType, new { htmlAttributes = new { @class = "form-control newinput" } })
                @Html.ValidationMessageFor(model => model.ContactName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-12 no-padding">
            <div class="col-md-12">
                @Html.LabelFor(model => model.GeneralNotes, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-12">
                @Html.TextAreaFor(model => model.GeneralNotes, 5, 0, new { @class = "form-control newinput" })
                @Html.ValidationMessageFor(model => model.GeneralNotes, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

        <div class="modal-footer d-flex justify-content-center">
            <button class="btn btn-default" type="submit" style="margin-right:3%;margin-top:2%">Save Changes <i class="fa fa-spinner fa-spin" id="icnMasterLoading" style="display:none;"></i></button>
        </div>
}
<script>
    $(document).ready(function () {
        $.validator.unobtrusive.parse("#FormEnquiryFollowup123");
        try {
            $('input.datepicker').datepicker({
                format: "dd-M-yyyy",
                maxViewMode: 0,
                todayBtn: "linked",
                clearBtn: true,
                autoclose: true,
                todayHighlight: true
            });
        }
        catch (e) {
            console.log(e.message);
        }
    });
</script>