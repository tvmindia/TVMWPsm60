@model PilotSmithApp.UserInterface.Models.SpareViewModel
<style>
    .modal-dialog {
        width: 65% !important;
    }
</style>
@using (Ajax.BeginForm("InsertUpdateSpare", "Spare", null, new AjaxOptions { HttpMethod = "POST", Confirm = "", OnSuccess = "SaveSuccessSpare", OnFailure = "NetworkFailure", AllowCache = false, LoadingElementId = "", OnBegin = "OnMasterBegin", OnComplete = "OnMasterComplete" }, new { @class = "form-horizontal", role = "form", id = "FormSpare" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.IsUpdate, htmlAttributes: new { @class = "" })
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ID, htmlAttributes: new { @class = "" })
    @Html.HiddenFor(model => model.hdnPopupFileID, htmlAttributes: new { @class = "", @id = "hdnPopupFileDupID", @value = Guid.Empty })
    <div class="form-group col-md-12 no-padding">
        <div class="col-md-12 no-padding">
            <div class="col-md-6 no-padding">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label lblrequired" })
                </div>
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control newinput" } })
                    @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6 no-padding">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label lblrequired" })
                </div>
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control  newinput" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="col-md-12 no-padding">
            <div class="col-md-6 no-padding">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.HSNCode, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-12">
                    @Html.EditorFor(model => model.HSNCode, new { htmlAttributes = new { @class = "form-control newinput", } })
                    @Html.ValidationMessageFor(model => model.HSNCode, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

    </div>
    <div class="col-md-11 divbox1" style="margin-left: 0% !important;width: 96.666667% !important;">
        <div class="col-md-12 divbox2">
            <div class="col-md-12 headSeperator">Attachments</div>
            @Html.Partial("_PopupFileupload")
        </div>
    </div>
    <div class="modal-footer d-flex justify-content-center">
        <button class="btn btn-default" type="submit" id="btnSaveMaster" style="margin-right:3%;margin-top:2%">Save Changes <i class="fa fa-spinner fa-spin" id="icnMasterLoading" style="display:none;"></i></button>
    </div>
}

<script>
    $(document).ready(function () {
        $.validator.unobtrusive.parse("#FormSpare");
        $('#SpareID').val($('#hdnSpareID').val());
        try {
            $('#btnPopupUpload').click(function () {
                debugger;
                //Pass the controller name
                var FileObject = new Object;
                if ($('#hdnPopupFileDupID').val() != "00000000-0000-0000-0000-000000000000") {
                    FileObject.ParentID = (($('#FormSpare #ID').val()) != "00000000-0000-0000-0000-000000000000" ? ($('#FormSpare #ID').val()) : $('#hdnPopupFileDupID').val());
                }
                else {
                    FileObject.ParentID = ($('#FormSpare #ID').val() == "00000000-0000-0000-0000-000000000000") ? "" : $('#FormSpare #ID').val();
                }
                FileObject.ParentType = "Spare";
                FileObject.Controller = "FileUpload";
                UploadPopupFile(FileObject);
            });
        }
        catch (e) {
            console.log(e.message);
        }
    });
</script>

