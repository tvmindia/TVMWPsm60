@model PilotSmithApp.UserInterface.Models.StateViewModel

@using (Ajax.BeginForm("InsertUpdateState", "State", null, new AjaxOptions { HttpMethod = "POST", Confirm = "", OnSuccess = "SaveSuccessState", OnFailure = "NetworkFailure", AllowCache = false, LoadingElementId = "", OnBegin = "OnMasterBegin", OnComplete = "OnMasterComplete" }, new { @class = "form-horizontal", role = "form", id = "FormState" }))
{
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.IsUpdate, htmlAttributes: new { @class = "" })
        @Html.HiddenFor(model => model.Code, htmlAttributes: new { @class = "" })
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="form-group col-md-12 no-padding">
            <div class="col-md-12 no-padding">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label lblrequired" })
                </div>
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control newinput"} })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group col-md-12 no-padding">
            <div class="col-md-12">
                @Html.LabelFor(model => model.CountryCode, htmlAttributes: new { @class = "control-label " })
            </div>
            <div class="col-md-12">
                <div class="divCountrySelectList">
                    <span class="form-control"> <i class="fa fa-spinner fa-spin"> </i></span>
                    @*@Html.Action("CountrySelectList", "Country", new { required = "" })*@
                </div>
            </div>
            <!-- This hidden field will keep the information whether the field is required or not -->
            @Html.Hidden("hdnCountryRequired", "")
            <!-- This hidden field will keep the information whether the field is disabled or not -->
            @Html.Hidden("hdnCountrydisabled", false)
            @Html.HiddenFor(model => model.CountryCode, htmlAttributes: new { @class = "", @id = "hdnCountryCode" })
        </div>

        <div class="modal-footer d-flex justify-content-center">
            <button class="btn btn-default" type="submit" id="btnSaveMaster" style="margin-right:3%;margin-top:2%">Save Changes <i class="fa fa-spinner fa-spin" id="icnMasterLoading" style="display:none;"></i></button>
        </div>
}
<script>
    $(document).ready(function () {
        debugger;
        $.validator.unobtrusive.parse("#FormState");
        try {
            $('#FormState .divCountrySelectList').load('/Country/CountrySelectList?required=' + $('#FormState #hdnCountryRequired').val(), function () {
                try {
                    $('#FormState .divCountrySelectList #CountryCode').select2({
                        dropdownParent: $("#divModelMasterPopUp3 .divCountrySelectList")
                    });
                    $('#FormState .select2').addClass('form-control newinput');
                }
                catch (e) {
                    console.log(e.message);
                }
            });
        }
        catch (e) {
            console.log(e.message);
        }
        $('#FormState #StateCode').val($('#FormState #hdnStateCode').val());
        //try {
        //    $('#CountryCode').select2({
        //        dropdownParent: $("#divModelMasterPopUp")
        //    });
        //    $('.select2').addClass('form-control newinput');
        //}
        //catch (e) {
        //    console.log(e.message);
        //}

    });
</script>


