@model PilotSmithApp.UserInterface.Models.ProductViewModel

@using (Ajax.BeginForm("InsertUpdateProduct", "Product", null, new AjaxOptions { HttpMethod = "POST", Confirm = "", OnSuccess = "SaveSuccessProduct", OnFailure = "NetworkFailure", AllowCache = false, LoadingElementId = "", OnBegin = "OnMasterBegin", OnComplete = "OnMasterComplete" }, new { @class = "form-horizontal", role = "form", id = "FormProduct" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal ">
        @Html.HiddenFor(model => model.IsUpdate, htmlAttributes: new { @class = "" })
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID, htmlAttributes: new { @class = "" })

        <div class="form-group col-md-12">
            <div class="col-md-12">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label lblrequired" })
                </div>
            </div>
            <div class="col-md-12">
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control BlockEnter newinput" } })
                    @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group col-md-12">
            <div class="col-md-12">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label lblrequired" })
                </div>
            </div>
            <div class="col-md-12">
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control BlockEnter newinput" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="col-md-12">
            <div class="col-md-12">
                <div class="input-group">
                    @Html.DropDownListFor(model => model.CategoryCode, Model.ProductCategory.SelectList, "--Select Product Category--", new { @class = "form-control" })
                    <span class="input-group-addon" style="cursor:pointer;color:#015E9A" onclick="AddProductCategoryMaster('OTR')"><i class="fa fa-plus-square-o"></i></span>
                </div>
            </div>
        </div>

        <div class="form-group col-md-12">
            <div class="col-md-12">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.IntroducedDateFormatted, htmlAttributes: new { @class = "control-label lblrequired" })
                </div>
            </div>
            <div class="col-md-12">
                <div class="col-md-12">
                    @Html.EditorFor(model => model.IntroducedDateFormatted, new { htmlAttributes = new { @class = "form-control HeaderBox datepicker" } })
                </div>
            </div>
        </div>

        @*<div class="form-group col-md-12">
            <div class="col-md-12">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.CompanyID, htmlAttributes: new { @class = "control-label" })
                </div>
            </div>
            <div class="col-md-12">
                <div class="col-md-12">
                    @Html.EditorFor(model => model.CompanyID, new { htmlAttributes = new { @class = "form-control newinput" } })
                </div>
            </div>
        </div>*@

        <div class="form-group col-md-12">
            <div class="col-md-12">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.HSNCode, htmlAttributes: new { @class = "control-label" })
                </div>
            </div>
            <div class="col-md-12">
                <div class="col-md-12">
                    @Html.EditorFor(model => model.HSNCode, new { htmlAttributes = new { @class = "form-control BlockEnter newinput" } })
                </div>
            </div>
        </div>

        <div class="form-group ">
            <div class="col-md-12">
                <input type="submit" value="Save Changes" id="btnSaveMaster" class="btn btn-info" style="margin-left:5%" />
                <img src="~/Content/images/MasterLoading.gif" id="imgMasterLoading" style="display:none" />
            </div>
        </div>

    </div>
}

<script>
    $(document).ready(function () {
        $.validator.unobtrusive.parse("#FormProduct");
        $('input.datepicker').datepicker({
            format: "dd-M-yyyy",//",
            maxViewMode: 0,
            todayBtn: "linked",
            clearBtn: true,
            autoclose: true,
            todayHighlight: true
        });
    });
</script>
