@model PilotSmithApp.UserInterface.Models.TaxTypeViewModel

@using (Ajax.BeginForm("InsertUpdateTaxType", "TaxType", null, new AjaxOptions { HttpMethod = "POST", Confirm = "", OnSuccess = "SaveSuccessTaxType", OnFailure = "NetworkFailure", AllowCache = false, LoadingElementId = "", OnBegin = "OnMasterBegin", OnComplete = "OnMasterComplete" }, new { @class = "form-horizontal", role = "form", id = "FormTaxType" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.IsUpdate, htmlAttributes: new { @class = "" })
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group col-md-12 no-padding">
        <div class="col-md-12 no-padding">
            <div class="col-md-12">
                @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-12">
                @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control newinput", @readonly = "readonly", @placeholder = "Autogenerated" } })

            </div>
        </div>
    </div>
        <div class="form-group col-md-12 no-padding">
            <div class="col-md-12 no-padding">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label " })
                </div>
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control newinput", @autofocus = true } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group col-md-12 no-padding">
            <div class="col-md-12 no-padding">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.CGSTPercentage, htmlAttributes: new { @class = "control-label " })
                </div>
                <div class="col-md-12">
                    @Html.EditorFor(model => model.CGSTPercentage, new { htmlAttributes = new { @class = "form-control newinput", @autofocus = true } })
                    @Html.HiddenFor(model => model.CGSTPercentage, htmlAttributes: new { @class = "", @id = "hdnStateCode" })
                </div>
            </div>
        </div>

        <div class="form-group col-md-12 no-padding">
            <div class="col-md-12 no-padding">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.SGSTPercentage, htmlAttributes: new { @class = "control-label " })
                </div>
                <div class="col-md-12">
                    @Html.EditorFor(model => model.SGSTPercentage, new { htmlAttributes = new { @class = "form-control newinput", @autofocus = true } })
                    @Html.HiddenFor(model => model.SGSTPercentage, htmlAttributes: new { @class = "", @id = "hdnDistrictCode" })
                </div>
            </div>
        </div>
        <div class="form-group col-md-12 no-padding">
            <div class="col-md-12 no-padding">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.IGSTPercentage, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-12">
                    @Html.EditorFor(model => model.IGSTPercentage, new { htmlAttributes = new { @class = "form-control newinput", @autofocus = true } })
                    @Html.ValidationMessageFor(model => model.IGSTPercentage, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="modal-footer d-flex justify-content-center">
            <button class="btn btn-default" type="submit" id="btnSaveMaster" style="margin-right:3%;margin-top:2%">Save Changes <i class="fa fa-spinner fa-spin" id="icnMasterLoading" style="display:none;"></i></button>
        </div>
}
<script>
    $(document).ready(function () {
        $.validator.unobtrusive.parse("#FormTaxType");
        //$('#TaxTypeCode').val($('#hdnTaxTypeCode').val());
        try {
            //$('#StateCode,#DistrictCode').select2({
            //    dropdownParent: $("#divModelMasterPopUp")
            //});
            //$('.select2').addClass('form-control newinput');
        }
        catch (e) {
            console.log(e.message);
        }
    });
</script>





