@model PilotSmithApp.UserInterface.Models.QuotationViewModel
@using PilotSmithApp.DataAccessObject.DTO;
<div id="divQuotationEmailcontainer">
    <div style="max-width: 1100px; font-size: 16px; line-height: 24px; font-family: 'Helvetica Neue', 'Helvetica', Helvetica, Arial, sans-serif; color: #555; margin: auto; padding: 30px; border: 3px solid #adadad;">
        <table cellpadding="0" cellspacing="0" style="width: 100%; line-height: inherit; text-align: left;border-bottom-color:#4a7f4d!important;border-bottom:thin solid">
            <tr class="top">
                <td style="width:400px;vertical-align: top;  " valign="top"><img src="@ViewBag.path" style="width:100px!important;workAround:image"></td>
                <td colspan="2" style="vertical-align: top;  text-align:right" valign="top">
                    <table style="width: 100%; line-height: inherit; text-align: left;">
                        <tr><td style="text-align:right;"><span style="font-size:25px">Quotation</span></td></tr>
                    </table>
                </td>
            </tr>
        </table>

        <table style="width:100%;line-height:20px;margin-top:5px">
            <tr style="width:100%;">
                <td style="width:70%;"></td>
                <td style="width:30%;text-align:right">
                    <table style="width:100%;font-size:12px">
                        <tr style="width:100%"><td style="text-align:left;">Quotation No.  </td><td>:</td><td style="text-align:right;padding-left:5px">@Model.QuoteNo</td></tr>
                        <tr style="width:100%"><td style="text-align:left;">Date   </td><td>:</td><td style="text-align:right;padding-left:5px">@Model.QuoteDateFormatted  </td></tr>
                        <tr style="width:100%"><td style="text-align:left;">Ref.No.   </td><td>:</td><td style="text-align:right;padding-left:5px">@Model.QuoteRefNo</td></tr>
                    </table>
                    <span style="text-align:left;"></span><br />
                    <span style="text-align:left;"></span>
                </td>

            </tr>
        </table>
        <br />
        @{ decimal itemtaxableAmount = 0, itemgSTAmount = 0, itemgrandTotal = 0, totaltaxable = 0, totalCGST = 0, totalSGST = 0, totalIGST = 0, grandTotal = 0, grossAmt = 0, otherChargeAmt = 0, GSTTotal = 0;
            var tot = "";}
        <table>
            <tr style="width:100%;">
                <td><b>From</b></td>
                <td></td>
                <td style="width:17%;"><b>Delivery Address</b></td>
                <td></td>
            </tr>
            <tr style="width:100%;">
                <td></td>
                <td style="width:400px;text-align:left;font-size:14px;vertical-align:top;">
                    Pilotsmith India Pvt. Ltd.<br />
                    Kallettumkara, Trichur Dist,<br />
                    Kerala, India 680 683<br />
                </td>
                <td></td>
                <td style="width:400px;text-align:left;font-size:14px;vertical-align:top;">

                    @Model.Customer.CompanyName<br />
                    @Model.MailingAddress
                </td>
            </tr>

        </table>


        <br />

        <table>
            <tr>
                <td style="font-size:15px"><b>Sub :</b> Quotation</td>
            </tr>
        </table>

        <br />

        <table>
            <tr>
                @if (@Model.EmailFlag)
            {
                    @Html.LabelFor(model => model.MailBodyHeader, htmlAttributes: new { @class = "control-label ", @style = "font-weight: bold;font-size:15px", @id = "lblheader" })
                    @*@Html.EditorFor(model => model.MailBodyHeader, new { htmlAttributes = new { @class = "form-control newinput", @rows = 5, @style = "font-size:14px;" } })*@
                    @Html.TextAreaFor(model => model.MailBodyHeader, 4, 0, new { @class = "form-control newinput" })
                }
                else
                {
                    <td style="font-size:15px;">@Html.Raw(@Model.MailBodyHeader)</td>
                }
            </tr>
        </table>
        <br />
        <table id="ItemDetailsTable" style="font-family: arial, sans-serif; border-collapse: collapse; width: 100%; line-height: 14px; text-align: left;" cellspacing="0" width="100%">
            <thead>
                <tr style="border-bottom-style: solid;border-bottom-width: 2px;border-bottom-color: #eee;">
                    <th style="width:3%;text-align: center;padding: 8px;font-size:10px; ">No.</th>
                    <th style="width:35%; text-align: left;padding: 8px;font-size:10px;">Product</th>
                    <th style="width:12%; text-align: left;padding: 8px;font-size:10px;">Quantity</th>
                    <th style="width:10%; text-align: right;padding: 8px;font-size:10px;">Rate</th>
                    <th style="width:10%; text-align: right;padding: 8px;font-size:10px;">Discount</th>
                    <th style="width:10%; text-align: right;padding: 8px;font-size:10px;">Taxable</th>
                    <th style="width:10%; text-align: right;padding: 8px;font-size:10px;">GST</th>
                    <th style="width:10%; text-align: right;padding: 8px;font-size:10px;">Total</th>
                </tr>
                @if (Model.QuotationDetailList != null)
                {
                    int slno = 1;

                    foreach (var mp in Model.QuotationDetailList)
                    {
                        decimal CGSTAmt = 0, SGSTAmt = 0, IGSTAmt = 0, GSTAmt=0;
                        itemtaxableAmount = Math.Round(((decimal)mp.Qty * (decimal)mp.Rate) - (decimal)mp.Discount, 2);
                        CGSTAmt = Math.Round((decimal)itemtaxableAmount * ((decimal)mp.CGSTPerc / (decimal)100));
                        SGSTAmt = Math.Round((decimal)itemtaxableAmount * ((decimal)mp.SGSTPerc / (decimal)100));
                        IGSTAmt = Math.Round((decimal)itemtaxableAmount * ((decimal)mp.IGSTPerc / (decimal)100));
                        GSTAmt = Math.Round((decimal)SGSTAmt + (decimal)CGSTAmt + (decimal)IGSTAmt, 2);
                        itemgSTAmount = Math.Round((decimal)SGSTAmt + (decimal)CGSTAmt + (decimal)IGSTAmt, 2);
                        itemgrandTotal = itemtaxableAmount + itemgSTAmount;
                        <tr style="text-align: right;padding: 8px;border-bottom-style: solid;border-bottom-width: 2px;border-bottom-color: #eee;">

                            <td style="width:3%;text-align: center;padding: 8px;font-size:10px;vertical-align:top;">@slno</td>
                            <td style="width:35%; text-align: left;padding: 8px;font-size:10px;vertical-align:top;">@mp.Product.Name - @mp.ProductModel.Name<br />@mp.ProductSpec</td>
                            <td style="width:12%; text-align: left;padding: 8px;font-size:10px;vertical-align:top;">@mp.Qty @mp.Unit.Description</td>
                            <td style="width:10%; text-align: right;padding: 8px;font-size:10px;vertical-align:top;">@mp.Rate</td>
                            <td style="width:10%; text-align: right;padding: 8px;font-size:10px;vertical-align:top;">@mp.Discount</td>
                            <td style="width:10%; text-align: right;padding: 8px;font-size:10px;vertical-align:top;">@itemtaxableAmount</td>
                            <td style="width:10%; text-align: right;padding: 8px;font-size:10px;vertical-align:top;">@GSTAmt</td>
                            <td style="width:10%; text-align: right;padding: 8px;font-size:10px;vertical-align:top;">@itemgrandTotal</td>

                        </tr>
                        slno = slno + 1;
                        totaltaxable = totaltaxable + (decimal)@itemtaxableAmount;
                        totalCGST = totalCGST + (decimal)CGSTAmt;
                        totalSGST = totalSGST + (decimal)SGSTAmt;
                        totalIGST = totalIGST + (decimal)IGSTAmt;
                    }
                    grossAmt = Math.Round(totaltaxable + totalCGST + totalSGST + totalIGST, 2);
                    grandTotal = grossAmt - (Model.Discount != null ? (decimal)Model.Discount : 0);
                    GSTTotal = Math.Round(GSTTotal + (decimal)totalCGST + (decimal)totalSGST + (decimal)totalIGST, 2);
                }

            </thead>
        </table>
        <br />

        <table style="width:100%">
            <tbody>
                <tr>
                    <td style="width:50%;vertical-align: top;">
                        @{
                            if (Model.QuotationOtherChargeList.Count != 0)
                            {
                                @*<div class="form-group col-md-6" style="border-color: #adadad;border-style: solid !important;">*@

                                <table id="OtherChargeDetailsTable" style="font-family: arial, sans-serif;border-color: #adadad;border-style: solid !important; border-collapse: collapse; width: 100%; line-height: 14px; text-align: left;" cellspacing="0">
                                    <thead>
                                        <tr style="border-bottom-style: solid;border-bottom-width: 2px;border-bottom-color: #eee;">
                                            <th style="width:7%;text-align: center;padding: 8px;font-size:10px; ">No.</th>
                                            <th style="width:46%; text-align: left;padding: 8px;font-size:10px;">OtherCharge</th>
                                            <th style="width:17%; text-align: left;padding: 8px;font-size:10px;">Charge Amount</th>
                                            <th style="width:15%; text-align: right;padding: 8px;font-size:10px;">GST</th>
                                            <th style="width:15%; text-align: right;padding: 8px;font-size:10px;">Total</th>
                                        </tr>
                                        @if (Model.QuotationOtherChargeList != null)
                                        {
                                            int slno = 1;

                                            foreach (var mp in Model.QuotationOtherChargeList)
                                            {
                                                decimal GSTAmt = 0, CGSTAmt = 0, SGSTAmt = 0, IGSTAmt = 0, Total = 0;
                                                CGSTAmt = Math.Round((decimal)mp.ChargeAmount * ((decimal)mp.CGSTPerc / (decimal)100));
                                                SGSTAmt = Math.Round((decimal)mp.ChargeAmount * ((decimal)mp.SGSTPerc / (decimal)100));
                                                IGSTAmt = Math.Round((decimal)mp.ChargeAmount * ((decimal)mp.IGSTPerc / (decimal)100));
                                                GSTAmt = Math.Round((decimal)SGSTAmt + (decimal)CGSTAmt + (decimal)IGSTAmt, 2);
                                                Total = Math.Round((decimal)GSTAmt + (decimal)mp.ChargeAmount, 2);
                                                <tr style="text-align: right;padding: 8px;border-bottom-style: solid;border-bottom-width: 2px;border-bottom-color: #eee;">

                                                    <td style="width:7%;text-align: center;padding: 8px;font-size:10px;vertical-align:top;">@slno</td>
                                                    <td style="width:46%; text-align: left;padding: 8px;font-size:10px;vertical-align:top;">@mp.OtherCharge.Description</td>
                                                    <td style="width:17%; text-align: left;padding: 8px;font-size:10px;vertical-align:top;">@mp.ChargeAmount</td>
                                                    <td style="width:15%; text-align: right;padding: 8px;font-size:10px;vertical-align:top;">@GSTAmt</td>
                                                    <td style="width:15%; text-align: right;padding: 8px;font-size:10px;vertical-align:top;">@Total</td>

                                                </tr>
                                                slno = slno + 1;
                                                otherChargeAmt = otherChargeAmt + Total;
                                            }
                                            grossAmt = Math.Round(grossAmt + otherChargeAmt, 2);
                                            grandTotal = grossAmt - (Model.Discount != null ? (decimal)Model.Discount : 0);
                                        }

                                    </thead>
                                </table>

                                @*</div>*@
                            }
                        }
                    </td>
                    <td style="width:10%"></td>
                    <td style="width:40%">

                        <table cellpadding="0" cellspacing="0" style="width: 100%; line-height: 14px; text-align: left;float:right;">

                            <tr class="">
                                <td style="vertical-align: top; padding: 5px;font-size:12px;" valign="top">
                                    Item Total
                                </td>

                                <td style="vertical-align: top; text-align: right; padding: 5px;font-size:12px;" align="right" valign="top">
                                    @totaltaxable
                                </td>
                            </tr>

                            <tr class="">
                                <td style="vertical-align: top; padding: 5px;font-size:12px;" valign="top">
                                    GST Total
                                </td>

                                <td style="vertical-align: top; text-align: right; padding: 5px;font-size:12px;" align="right" valign="top">
                                    @GSTTotal
                                </td>
                            </tr>

                            <tr class="">
                                <td style="vertical-align: top; padding: 5px;font-size:12px;" valign="top">
                                    Other Charge Total
                                </td>

                                <td style="vertical-align: top; text-align: right; padding: 5px;font-size:12px;" align="right" valign="top">
                                    @otherChargeAmt
                                </td>
                            </tr>
                            @*<tr class="">
                                    <td style="vertical-align: top; padding: 5px;font-size:12px;" valign="top">
                                        IGST Total
                                    </td>

                                    <td style="vertical-align: top; text-align: right; padding: 5px;font-size:12px;" align="right" valign="top">
                                        @totalIGST
                                    </td>
                                </tr>*@
                            <tr class="">
                                <td style="vertical-align: top; padding: 5px;font-size:12px;" valign="top">
                                    Gross Amount
                                </td>

                                <td style="vertical-align: top; text-align: right; border-top-style: solid; border-top-width: 2px; border-top-color: #eee; font-weight: bold; padding: 5px;font-size:12px;" align="right" valign="top">
                                    @grossAmt
                                </td>
                            </tr>
                            <tr class="item">
                                <td style="vertical-align: top;  padding: 5px;font-size:12px;" valign="top">
                                    Cash Discount
                                </td>

                                <td style="vertical-align: top; text-align: right; padding: 5px;font-size:12px;" align="right" valign="top">
                                    @Model.Discount
                                </td>
                            </tr>


                            <tr class="">
                                <td style="vertical-align: top; padding: 5px;" valign="top"></td>

                                <td style="vertical-align: top; text-align: right; padding: 5px;" align="right" valign="top"></td>
                            </tr>

                            <tr class="total">
                                <td style="vertical-align: top; padding: 5px; font-size:14px;" valign="top">Total:</td>

                                <td style="vertical-align: top; text-align: right; border-top-style: solid; border-top-width: 2px; border-top-color: #eee; font-weight: bold; padding: 5px;font-size:14px;" align="right" valign="top">
                                    @grandTotal
                                </td>
                            </tr>

                        </table>
                    </td>
                </tr>
            </tbody>
        </table>

        @{
            PSASysCommon PSASysCommon = new PSASysCommon();

            tot = PSASysCommon.NumberToWords(double.Parse(grandTotal.ToString()));
        }

        <table style="width: 100%; line-height: inherit; text-align: right;">

            <tr class="details">
                <td style="vertical-align: top; padding: 5px 5px 20px;font-size:15px;font-weight: bold;" valign="top">
                    @tot
                </td>
            </tr>
        </table>

        <table style="width: 100%; line-height: inherit; text-align: left;">

            <tr class="details">
                <td style="vertical-align: top; padding: 5px 5px 20px;font-size:15px;" valign="top">
                    @if (@Model.EmailFlag)
                    {
                        @Html.LabelFor(model => model.MailBodyFooter, htmlAttributes: new { @class = "control-label  ", @style = "font-weight: bold;font-size:15px", @id = "lblfooter" })
                        @Html.TextAreaFor(model => model.MailBodyFooter, 4, 0, new { @class = "form-control newinput" })
                    }
                    else
                    {
                        @Html.Raw(@Model.MailBodyFooter)
                    }
                </td>
            </tr>
        </table>
    </div>


</div>
<div class="modal-footer d-flex justify-content-center">
    @if (Model.EmailFlag)
    {
        using (Ajax.BeginForm("UpdateQuotationEmailInfo", "Quotation", null, new AjaxOptions { HttpMethod = "POST", Confirm = "", OnSuccess = "SaveSuccessUpdateQuotationEmailInfo", OnFailure = "", AllowCache = false, LoadingElementId = "", OnBegin = "OnMasterBegin", OnComplete = "OnMasterComplete" }, new { @class = "", role = "form", id = "FormUpdateQuotationEmailInfo" }))
        {
            @Html.EditorFor(model => model.EmailSentTo, new { htmlAttributes = new { @class = "form-control newinput", @placeholder = "Email Sent To" } })
            @Html.HiddenFor(model => model.ID, htmlAttributes: new { @class = "" })
            @Html.HiddenFor(model => model.MailBodyHeader, htmlAttributes: new { @class = "", @id = "hdnMailBodyHeader" })
            @Html.HiddenFor(model => model.MailBodyFooter, htmlAttributes: new { @class = "", @id = "hdnMailBodyFooter" })
            <button type="submit" class="btn btn-default" style="margin-top:2%" onclick="UpdateQuotationEmailInfo()">Next <i class="fa fa-spinner fa-spin" id="icnMasterLoading" style="display:none;"></i></button>
        }
    }
    else
    {
        using (Ajax.BeginForm("SendQuotationEmail", "Quotation", null, new AjaxOptions { HttpMethod = "POST", Confirm = "", OnSuccess = "SaveSuccessQuotationEmailSend", OnFailure = "", AllowCache = false, LoadingElementId = "", OnBegin = "OnMasterBegin", OnComplete = "OnMasterComplete" }, new { @class = "", role = "form", id = "FormQuotationEmailSend" }))
        {
            @Html.HiddenFor(model => model.ID, htmlAttributes: new { @class = "" })
            @Html.EditorFor(model => model.EmailSentTo, new { htmlAttributes = new { @class = "form-control newinput", @placeholder = "Email Sent To" } })
            @Html.HiddenFor(model => model.MailContant, htmlAttributes: new { @class = "", @id = "hdnQuotationEMailContent" })
            <a class="btn btn-default" style="margin-top:2%" onclick="EmailQuotation()">Back </a>
            if (Model.LatestApprovalStatus == 4)
            {
                <button type="submit" class="btn btn-default" style="margin-top:2%" onclick="SendQuotationEmail()">Send <i class="fa fa-spinner fa-spin" id="icnMasterLoading" style="display:none;"></i></button>
            }
            else
            {
                <button type="submit" disabled class="btn btn-default" style="margin-top:2%" title="Document Not Approved">Send <i class="fa fa-spinner fa-spin" id="icnMasterLoading" style="display:none;"></i></button>
            }

        }

        using (Html.BeginForm("Download", "PDFGenerator", FormMethod.Post, new { @class = "", @style = "position:fixed;bottom:1.6%;right:17%;", role = "form", @id = "PDFForm" }))
        {
            @Html.HiddenFor(model => model.PDFTools.Content, htmlAttributes: new { @class = "", Value = "", @id = "hdnContent" })
            @Html.HiddenFor(model => model.PDFTools.Headcontent, htmlAttributes: new { @class = "", Value = "", @id = "hdnHeadContent" })
            @Html.HiddenFor(model => model.PDFTools.HeaderText, htmlAttributes: new { @class = "", Value = "PilotSmith" })
            @Html.HiddenFor(model => model.PDFTools.ContentFileName, htmlAttributes: new { @class = "", Value = "Quotation", @id = "hdnContentFileName" })
            @Html.HiddenFor(model => model.PDFTools.CustomerName, htmlAttributes: new { @class = "", @id = "hdnCustomerName" })
            if (Model.LatestApprovalStatus == 4)
            {
                <button type="submit" class="btn btn-default" style="margin-top:2%" onclick="DownloadQuotation()">Download <i class="fa fa-spinner fa-spin" id="icnMasterLoading" style="display:none;"></i></button>
            }
            else
            {
                <button type="submit" disabled class="btn btn-default" style="margin-top:2%" title="Document Not Approved">Download <i class="fa fa-spinner fa-spin" id="icnMasterLoading" style="display:none;"></i></button>
            }
        }
    }

</div>
<script>
    $(document).ready(function () {
        $.validator.unobtrusive.parse('#FormUpdateQuotationEmailInfo');
        $.validator.unobtrusive.parse("#FormQuotationEmailSend");
        $.validator.unobtrusive.parse("#FormQuotationEmailDownload");
    });
</script>