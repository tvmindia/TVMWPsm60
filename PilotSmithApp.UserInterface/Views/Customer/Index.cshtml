@model PilotSmithApp.UserInterface.Models.CustomerViewModel
@using PilotSmithApp.UserInterface.App_Start
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}
@section styles {
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/DataTables/css/datatable")
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/bootstrapdatepicker")
    <style>
        .newinput {
            border: 0px;
            border-radius: 0px;
            /* box-shadow: white 1px 6px 1px; */
            height: 30px;
            border-bottom: 1px solid #4bd24b;
            background-color: #fffdf9;
        }

        .divbox1 {
            padding-left: 0px;
            padding-right: 1.7%;
            background-color: white;
            margin-top: 1.5%;
            margin-left: 4%;
            border-radius: 2%;
        }

        .divbox2 {
            padding: 0px;
            background-color: white;
            margin: 1%;
        }

        .headSeperator {
            background-color: white;
            margin-bottom: 10px !important;
            margin-top: 0px;
            color: #DB8B0B;
        }

        .no-padding {
            padding: 0px;
        }

        .no-left-padding {
            padding-left: 0px;
        }

        .no-right-padding {
            padding-right: 0px;
        }
        .overlay{
            background-color:#EEF5F9;
        }
    </style>
}

<div style="width:100%;">
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-users"></i> Customers</a></li>
        <li class="active">@ViewBag.Title</li>
    </ol>
</div>

<section class="content" id="main">
    <div class="row">
        <div class="" id="btnPatchAttributeSettab" style="min-height:25px">

            @{
                var data = new { ActionType = "List" };
                @Html.Action("ChangeButtonStyle", "Customer", data);
            }
        </div>
    </div>
    <div class="row summaryboxes">

        <div class="clearfix visible-sm-block"></div>

    </div>
    <div class="row">
        &nbsp;
    </div>
    <div class="row tableContainer">
        <div class="col-md-12">
            <table id="CustomerTable" class="table table-striped table-bordered table-hover customgrd" cellspacing="0" width="100%">
                <thead>
                    <tr class="text-center TableHead">
                        <th>ID</th>
                        <th>Company</th>
                        <th>Contact Person</th>
                        @*<th>Contact Title</th>*@
                        <th>Mobile</th>
                        <th>Tax Reg No</th>
                        <th>Pan No</th>
                        <th>Outstanding Amount</th>
                        <th>...</th>

                    </tr>
                </thead>
            </table>
        </div>
    </div>

</section>

<section class="content">
    <div id="myNav" class="overlay">
        <div class="overlay-content">
            <div class="row" id="OverlayHeader">
                <div class="col-md-6" style="text-align:left;left:4%;">
                    <span id="lblCustomerInfo" class="SCHeader">Customer Information</span>
                </div>
                <div class="col-md-6" id="btnPatchAdd" style="min-height:25px; padding-right:25px;">
                    @{
                        var data1 = new { ActionType = "Add" };
                    @Html.Action("ChangeButtonStyle", "Customer", data1);
                    }
                </div>
            </div>
            <div class="EntryForms" style="height:550px">
                @using (Ajax.BeginForm("InsertUpdateCustomer", "Customer", new AjaxOptions { HttpMethod = "POST", Confirm = "", OnSuccess = "SaveSuccess", OnFailure = "NetworkFailure", AllowCache = false, LoadingElementId = "", OnBegin = "", OnComplete = "" }, new { @class = "form-horizontal", role = "form", @id = "CustomersForm" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.Hidden("BindValue", "", htmlAttributes: new { @class = "", Value = ViewBag.value });

                    @Html.HiddenFor(model => model.ID, htmlAttributes: new { @class = "", Value = "0" })
                    <div class="col-md-11 divbox1">
                        <div class="col-md-12 divbox2">
                            <div class="col-md-12 headSeperator"> Head Details</div>

                            <div class="form-group col-md-12">
                                <div class="col-md-6 no-padding">
                                    <div class="col-md-12">
                                        @Html.LabelFor(model => model.CompanyName, htmlAttributes: new { @class = "control-label" })
                                    </div>
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control BlockEnter newinput", @autofocus = true } })
                                        @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="col-md-3">
                                    <div class="col-md-12">
                                        @Html.LabelFor(model => model.IsInternalComp, htmlAttributes: new { @class = "control-label" })
                                    </div>
                                    <div class="col-md-12">
                                        @{
                                            List<SelectListItem> dropdownList = new List<SelectListItem>();
                                            dropdownList.Add(new SelectListItem
                                            { Text = "No", Value = "false", Selected = true });
                                            dropdownList.Add(new SelectListItem
                                            { Text = "Yes", Value = "true" });
                                        }
                                        @Html.DropDownListFor(model => model.IsInternalComp, dropdownList, new { @class = "form-control BlockEnter newinput", style = "padding:4px 12px;", @id = "IsInternalComp" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12">&nbsp;</div>
                        </div>
                    </div>
                    <div class="col-md-11 divbox1">
                        <div class="col-md-12 divbox2">
                            <div class="col-md-12 headSeperator"> Contact Details</div>
                            <div class="form-group col-md-12">
                                <div class="col-md-2 no-padding">
                                    <div class="col-md-12">
                                        @Html.LabelFor(model => model.ContactTitle, htmlAttributes: new { @class = "control-label" })


                                    </div>
                                    <div class="col-md-12">
                                        @Html.DropDownListFor(model => model.ContactTitle, Model.TitlesList, "-- select", new { @class = "form-control BlockEnter newinput", value = -1, style = "padding:4px 12px;" })
                                        @Html.ValidationMessageFor(model => model.ContactTitle, "", new { @class = "text-danger" })

                                    </div>

                                </div>
                                <div class="col-md-4 no-padding">
                                    <div class="col-md-12">
                                        @Html.LabelFor(model => model.ContactPerson, htmlAttributes: new { @class = "control-label " })

                                    </div>
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.ContactPerson, new { htmlAttributes = new { @class = "form-control BlockEnter newinput" } })

                                    </div>

                                </div>
                                <div class="col-md-5">
                                    <div class="col-md-12">
                                        @Html.LabelFor(model => model.ContactEmail, htmlAttributes: new { @class = "control-label" })


                                    </div>
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.ContactEmail, new { htmlAttributes = new { @class = "form-control BlockEnter newinput", } })
                                        @Html.ValidationMessageFor(model => model.ContactEmail, "", new { @class = "text-danger" })
                                    </div>

                                </div>
                            </div>

                            <div class="form-group col-md-12">
                                <div class="col-md-6 no-padding">
                                    <div class="col-md-12">
                                        @Html.LabelFor(model => model.Website, htmlAttributes: new { @class = "control-label" })


                                    </div>
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.Website, new { htmlAttributes = new { @class = "form-control BlockEnter newinput" } })
                                        @Html.ValidationMessageFor(model => model.Website, "", new { @class = "text-danger" })

                                    </div>

                                </div>
                            </div>
                            @*<div class="col-md-12">*@

                            <div class="form-group col-md-12">
                                <div class="col-md-3 no-left-padding">
                                    <div class="col-md-12">
                                        @Html.LabelFor(model => model.LandLine, htmlAttributes: new { @class = "control-label" })


                                    </div>
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.LandLine, new { htmlAttributes = new { @class = "form-control BlockEnter newinput" } })
                                        @Html.ValidationMessageFor(model => model.LandLine, "", new { @class = "text-danger" })

                                    </div>

                                </div>
                                <div class="col-md-3 no-right-padding">
                                    <div class="col-md-12">
                                        @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label " })

                                    </div>
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control BlockEnter newinput" } })

                                    </div>

                                </div>
                                <div class="col-md-3">
                                    <div class="col-md-12">
                                        @Html.LabelFor(model => model.Fax, htmlAttributes: new { @class = "control-label" })


                                    </div>
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.Fax, new { htmlAttributes = new { @class = "form-control BlockEnter newinput", onkeypress = "return isNumber(event)" } })
                                        @Html.ValidationMessageFor(model => model.Fax, "", new { @class = "text-danger" })
                                    </div>

                                </div>
                                <div class="col-md-3">
                                    <div class="col-md-12">
                                        @Html.LabelFor(model => model.OtherPhoneNos, htmlAttributes: new { @class = "control-label" })


                                    </div>
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.OtherPhoneNos, new { htmlAttributes = new { @class = "form-control BlockEnter newinput", } })
                                        @Html.ValidationMessageFor(model => model.OtherPhoneNos, "", new { @class = "text-danger" })
                                    </div>

                                </div>
                            </div>
                            <div class="col-md-12">&nbsp;</div>
                        </div>
                    </div>
                    <div class="col-md-11 divbox1">
                            <div class="col-md-12 divbox2">
                                <div class="col-md-12 headSeperator"> Addresses</div>
                                <div class="form-group col-md-12">
                                    <div class="col-md-6 no-padding">
                                        <div class="col-md-12">
                                            @Html.LabelFor(model => model.BillingAddress, htmlAttributes: new { @class = "control-label" })

                                        </div>
                                        <div class="col-md-12">
                                            @Html.TextAreaFor(model => model.BillingAddress, 5, 60, new { @class = "form-control HeaderBox BlockEnter newinput" })
                                            @Html.ValidationMessageFor(model => model.BillingAddress, "", new { @class = "text-danger" })

                                        </div>

                                    </div>
                                    <div class="col-md-6">
                                        <div class="col-md-12">
                                            @Html.LabelFor(model => model.ShippingAddress, htmlAttributes: new { @class = "control-label" })


                                        </div>
                                        <div class="col-md-12">
                                            @Html.TextAreaFor(model => model.ShippingAddress, 5, 60, new { @class = "form-control HeaderBox BlockEnter multiline4 newinput" })
                                            @Html.ValidationMessageFor(model => model.ShippingAddress, "", new { @class = "text-danger" })
                                        </div>

                                    </div>
                                </div>
                                <div class="col-md-12">&nbsp;</div>
                            </div>
                        </div>
                    <div class="form-group" hidden="hidden">
                    <div class="col-md-offset-2 col-md-10">
                        <input id="btnInsertUpdateCustomers" type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
                }
            </div>
        </div>
    </div>

</section>
@section Scripts {
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/datatable")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/jqueryunobtrusiveajaxvalidate")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/Customers")
}

