@model PilotSmithApp.UserInterface.Models.ProductionOrderViewModel
<div style="padding:0px 30px 0px 30px;">
    @{
        if (Model.EmailFlag)
        {
            using (Ajax.BeginForm("UpdateProductionOrderEmailInfo", "ProductionOrder", null, new AjaxOptions { HttpMethod = "POST", Confirm = "", OnSuccess = "SaveSuccessUpdateProductionOrderEmailInfo", OnFailure = "", AllowCache = false, LoadingElementId = "", OnBegin = "OnMasterBegin", OnComplete = "OnMasterComplete" }, new { @class = "", role = "form", id = "FormUpdateProductionOrderEmailInfo" }))
            {
                @Html.HiddenFor(model => model.ID, htmlAttributes: new { @class = "" })
                <table style="width:100%;font-size:12px">
                    <tr>
                        <td colspan="6">
                            @Html.LabelFor(model => model.EmailSentTo, htmlAttributes: new { @class = "control-label", @style = "font-weight: bold;font-size:15px" })
                            @Html.EditorFor(model => model.EmailSentTo, new { htmlAttributes = new { @class = "form-control newinput", @placeholder = "Email Sent To" } })
                        </td>
                    </tr>
                    <tr>
                        <td colspan="6">
                            @Html.LabelFor(model => model.Cc, htmlAttributes: new { @class = "control-label", @style = "font-weight: bold;font-size:15px" })
                            @Html.EditorFor(model => model.Cc, new { htmlAttributes = new { @class = "form-control newinput" } })
                        </td>
                    </tr>
                    <tr>
                        <td colspan="6">
                            @Html.LabelFor(model => model.Bcc, htmlAttributes: new { @class = "control-label", @style = "font-weight: bold;font-size:15px" })
                            @Html.EditorFor(model => model.Bcc, new { htmlAttributes = new { @class = "form-control newinput" } })
                        </td>
                    </tr>
                    <tr>
                        <td colspan="6">
                            @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label", @style = "font-weight: bold;font-size:15px" })
                            @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control newinput" } })
                        </td>
                    </tr>
                    @*<tr>
                        <td colspan="6">
                            @Html.LabelFor(model => model.MailBodyHeader, htmlAttributes: new { @class = "control-label ", @style = "font-weight: bold;font-size:15px", @id = "lblheader" })
                            @Html.TextAreaFor(model => model.MailBodyHeader, 4, 0, new { @class = "form-control newinput" })
                        </td>
                    </tr>
                    <tr>
                        <td colspan="6">
                            @Html.LabelFor(model => model.MailBodyFooter, htmlAttributes: new { @class = "control-label ", @style = "font-weight: bold;font-size:15px", @id = "lblheader" })
                            @Html.TextAreaFor(model => model.MailBodyFooter, 4, 0, new { @class = "form-control newinput" })
                        </td>
                    </tr>*@
                </table>
                <div class="modal-footer d-flex justify-content-center">
                    <button type="submit" class="btn btn-openid" style="margin-top:2%;color:white;text-decoration:none;" onclick="UpdateProductionOrderEmailInfo()">Preview <i class="fa fa-spinner fa-spin" id="icnMasterLoading" style="display:none;"></i></button>
                </div>
            }
        }
    }
    <br />
</div>
@if (!Model.EmailFlag)
{
    <div>
        <img style="width:100%;height:210px" src="~/Content/images/LH_Header.jpg" />
    </div>
    <div id="divProductionOrderEmailcontainer" style="padding:0px 30px 0px 30px;margin-left:51px;">
        <table style="width:100%;font-size:12px; font-family: Arial; color: #000;">
            <thead>
                <tr><th colspan="1"></th><th colspan="5" style="text-align:center;text-decoration:underline;font-weight:100;font-size:16px">Production Order</th></tr>

            </thead>
            <tbody>
                <tr><td colspan="6">&nbsp;</td></tr>
                <tr><td colspan="3" style="padding-left:30px;vertical-align:top;"><b>From,</b><br /> <span>@Html.Raw(@Model.MailFrom.Replace("\n", "<br />"))<br /></span></td><td colspan="3" style="padding-left:30px;vertical-align:top;"><b>Customer Details,</b><br />@*<span id="contact"></span>*@<span><br />@Model.Customer.CompanyName</span></td></tr>
                <tr><td colspan="6">&nbsp;</td></tr>
                <tr><td>Production Order No</td><td colspan="2">: @Model.ProdOrderNo</td><td></td><td></td></tr>
                <tr><td>Production Order Date</td><td colspan="2">: @Model.ProdOrderDateFormatted</td><td></td><td></td></tr>
                <tr><td>Expected Delivery Date</td><td colspan="2">: @Model.ExpectedDelvDateFormatted</td><td></td><td></td></tr>
                @{
                    if (Model.SaleOrderNo != null)
                    {
                        <tr><td>Sale Order No.</td><td colspan="2">: @Model.SaleOrderNo</td><td></td><td></td></tr>
                        <tr><td>Sale Order Reference No.</td><td colspan="2">: @Model.SaleOrderRefNo</td><td></td><td></td></tr>
                    }
                }
                
                <tr><td colspan="6">&nbsp;</td></tr>
                @*<tr>
                    @{
                        var mailBodyHeader = @Model.MailBodyHeader;
                        mailBodyHeader = mailBodyHeader.Replace("\r\n", "<br />");
                        <td colspan="6" style="font-size:11px;">@Html.Raw(mailBodyHeader)</td>
                    }
                </tr>
                <tr><td colspan="6">&nbsp;</td></tr>*@
                <tr><td>&nbsp;</td></tr>
            </tbody>
        </table>
        <span style="font-size:10px;" id="spnFilterNote"></span>
        <br />
        @{ decimal @*curProductionQty = 0,*@ amount = 0; string totMilestone;}
        @*<table id="ItemDetailsTable" style="font-family: arial, sans-serif;color: #000;padding-top:10px; border-collapse: collapse; width: 100%; line-height: 14px; text-align: left;" cellspacing="0" width="100%">*@
        <table id="ItemDetailsTable" style="width:100%;padding-top:30px;">
            <thead>
                <tr style="border-bottom-style: solid;border-top-style:solid;border-bottom-width: 2px;border-top-width: 2px;border-bottom-color: #eee;border-top-color: #eee;">
                    <th style="width:5%;text-align: center;padding: 8px;font-size:10px;border-bottom:solid 1.5px;border-bottom-color: #000;border-top:solid 1.5px;border-top-color: #000; "></th>
                    <th style="width:5%;text-align: center;padding: 8px;font-size:10px;border-bottom:solid 1.5px;border-bottom-color: #000;border-top:solid 1.5px;border-top-color: #000; ">No.</th>
                    <th style="width:21%; text-align: left;padding: 8px;font-size:10px;border-bottom:solid 1.5px;border-bottom-color: #000;border-top:solid 1.5px;border-top-color: #000;">Product</th>
                    <th style="width:12%; text-align: left;padding: 8px;font-size:10px;border-bottom:solid 1.5px;border-bottom-color: #000;border-top:solid 1.5px;border-top-color: #000;">HSN</th>
                    <th style="width:10%; text-align: left;padding: 8px;font-size:10px;border-bottom:solid 1.5px;border-bottom-color: #000;border-top:solid 1.5px;border-top-color: #000;">Sale.Ord Qty</th>
                    @*<th style="width:10%; text-align: right;padding: 8px;font-size:10px;">PrevProd Ord.Qty</th>*@
                    <th style="width:11%; text-align: right;padding: 8px;font-size:10px;border-bottom:solid 1.5px;border-bottom-color: #000;border-top:solid 1.5px;border-top-color: #000;">Cur.Prod.Ord Qty</th>
                    <th style="width:11%; text-align: right;padding: 8px;font-size:10px;border-bottom:solid 1.5px;border-bottom-color: #000;border-top:solid 1.5px;border-top-color: #000;">Produced.Qty</th>
                    @*<th style="width:10%; text-align: right;padding: 8px;font-size:10px;">Rate</th>
                    <th style="width:10%; text-align: right;padding: 8px;font-size:10px;">Amount</th>*@
                    <th style="width:10%; text-align: right;padding: 8px;font-size:10px;border-bottom:solid 1.5px;border-bottom-color: #000;border-top:solid 1.5px;border-top-color: #000;">Sup/Plant</th>
                    <th style="width:10%; text-align: right;padding: 8px;font-size:10px;border-bottom:solid 1.5px;border-bottom-color: #000;border-top:solid 1.5px;border-top-color: #000;">Completed</th>
                </tr>
                @if (Model.ProductionOrderDetailList != null)
                {
                    int slno = 1;

                    foreach (var mp in Model.ProductionOrderDetailList)
                    {

                        //curProductionQty = Math.Round((decimal)mp.SaleOrderQty - (decimal)mp.PrevProducedQty);
                        if (mp.SaleOrderQty != 0)
                        {
                            amount = Math.Round((decimal)mp.SaleOrderQty * (decimal)mp.Rate);
                        }
                        else
                        {
                            amount = Math.Round((decimal)mp.OrderQty * (decimal)mp.Rate);
                        }

                        totMilestone = "";
                        if ((mp.MileStone1FcFinishDtFormatted != "") && (mp.MileStone1AcTFinishDtFormatted != ""))
                        {
                            totMilestone = "25%";
                        }
                        if ((mp.MileStone2FcFinishDtFormatted != "") && (mp.MileStone2AcTFinishDtFormatted != ""))
                        {
                            totMilestone = "50%";
                        }
                        if ((mp.MileStone3FcFinishDtFormatted != "") && (mp.MileStone3AcTFinishDtFormatted != ""))
                        {
                            totMilestone = "75%";
                        }
                        if ((mp.MileStone4FcFinishDtFormatted != "") && (mp.MileStone4AcTFinishDtFormatted != ""))
                        {
                            totMilestone = "100%";
                        }

                        <tr style="text-align: right;padding: 8px;border-bottom-style: solid;border-bottom-width: 1px;color: #1d1a1a;">
                            <td><input style="align-items: center;margin: 8px;vertical-align:top;" class="SelectProduct" type="checkbox" checked/></td>
                            <td style="width:5%;text-align: center;padding: 8px;font-size:10px;vertical-align:top;">@slno</td>
                            <td style="width:21%; text-align: left;padding: 8px;font-size:10px;vertical-align:top;">@mp.Product.Name - @mp.ProductModel.Name<br />@mp.ProductSpec</td>
                            <td style="width:12%;text-align:left;padding:8px;font-size:10px;vertical-align:top;">@mp.Product.HSNCode</td>
                            <td style="width:10%; text-align: left;padding: 8px;font-size:10px;vertical-align:top;">@mp.SaleOrderQty @mp.Unit.Description</td>
                            @*<td style="width:10%; text-align: right;padding: 8px;font-size:10px;vertical-align:top;">@mp.PrevProdOrderQty @mp.Unit.Description</td>*@
                            <td style="width:11%; text-align: right;padding: 8px;font-size:10px;vertical-align:top;">@mp.OrderQty @mp.Unit.Description</td>
                            <td style="width:11%; text-align: right;padding: 8px;font-size:10px;vertical-align:top;">@mp.ProducedQty @mp.Unit.Description</td>
                            @*<td style="width:10%; text-align: right;padding: 8px;font-size:10px;vertical-align:top;">@mp.Rate</td>
                            <td style="width:10%; text-align: right;padding: 8px;font-size:10px;vertical-align:top;">@amount</td>*@
                            <td style="width:10%; text-align: right;padding: 8px;font-size:10px;vertical-align:top;">@mp.Plant.Description</td>
                            <td style="width:10%; text-align: right;padding: 8px;font-size:10px;vertical-align:top;">@totMilestone</td>
                        </tr>
                        slno = slno + 1;

                    }

                }

            </thead>
        </table>
        @if (Model.GeneralNotes != null)
        {
            <table style="width:100%;margin-top:2%;">
                <thead>
                    <tr>
                        <td style="font-size:small;padding-bottom:5px;"><b><u>General Notes</u></b></td>
                    </tr>
                    <tr>
                        <td style="font-size:small">@Html.Raw(Model.GeneralNotes.Replace("\n", "<br />"))</td>
                    </tr>
                </thead>
            </table>
        }
       @*<table style="width:100%;margin-top:2%;">
           <thead>
               <tr><td colspan="10">&nbsp;</td></tr>
               <tr>
                   @{
                       var mailbodyFooter = @Model.MailBodyFooter;
                       mailbodyFooter = mailbodyFooter.Replace("\r\n", "<br />");
                       <td colspan="10" style="font-size:11px;">@Html.Raw(@mailbodyFooter)</td>
                   }
               </tr>

           </thead>
       </table>*@
    </div>
    <div style="padding-top:20px">
        <img style="width:100%;height:150px" src="~/Content/images/LH_Footer.jpg" />
    </div>
            }
<div class="modal-footer d-flex justify-content-left" style="text-align:left;padding:0px 30px 0px 30px;">
    @{
        if (!Model.EmailFlag)
        {
            using (Ajax.BeginForm("SendProductionOrderEmail", "ProductionOrder", null, new AjaxOptions { HttpMethod = "POST", Confirm = "", OnSuccess = "SaveSuccessProductionOrderEmailSend", OnFailure = "", AllowCache = false, LoadingElementId = "", OnBegin = "OnMasterBegin", OnComplete = "OnMasterComplete" }, new { @class = "", role = "form", id = "FormProductionOrderEmailSend" }))
            {
                @Html.HiddenFor(model => model.ID, htmlAttributes: new { @class = "" })
                @Html.HiddenFor(model => model.EmailSentTo, htmlAttributes: new { @class = "", @id = "hdnEmailSentTo" })
                @Html.HiddenFor(model => model.Cc, htmlAttributes: new { @class = "" })
                @Html.HiddenFor(model => model.Bcc, htmlAttributes: new { @class = "" })
                @Html.HiddenFor(model => model.Subject, htmlAttributes: new { @class = "" })
                @Html.HiddenFor(model => model.LatestApprovalStatus, htmlAttributes: new { @class = "" })
                @Html.HiddenFor(model => model.EmailItemList, htmlAttributes: new { @class = "" })
                @Html.HiddenFor(model => model.MailContant, htmlAttributes: new { @class = "", @id = "hdnProductionOrderEMailContent" })
                @Html.HiddenFor(model => model.Customer.ContactPerson, htmlAttributes: new { @class = "", @id = "hdnContactPerson" })
                @Html.HiddenFor(model => model.ProdOrderNo, htmlAttributes: new { @class = "", @id = "hdnProdOrderNo" })
                @Html.HiddenFor(model => model.ProdOrderDateFormatted, htmlAttributes: new { @class = "", @id = "hdnProdOrderDateFormatted" })
                <br />
                <table style="width:50%;font-size:12px">
                    <tbody>
                        <tr><td id="sentTolbl">Sent To</td><td>: </td><td id="sentTovalidationmsglbl">@Model.EmailSentTo</td></tr>
                        <tr><td>Cc</td><td>: </td><td>@Model.Cc</td></tr>
                        <tr><td>Bcc</td><td>: </td><td>@Model.Bcc</td></tr>
                        <tr><td>Subject</td><td>: </td><td>@Model.Subject</td></tr>
                    </tbody>
                </table>
                <a class="btn btn-openid" style="margin:5px;color:white;text-decoration:none;float:right" onclick="EmailProductionOrder()">Back </a>
                if (Model.LatestApprovalStatus == 4 || Model.LatestApprovalStatus==0)
                {
                    <button type="button" class="btn btn-openid" style="margin:5px;float:right;color:white;text-decoration:none;" onclick="SendProductionOrderEmail()">Send <i class="fa fa-spinner fa-spin" id="icnMasterLoading" style="display:none;"></i></button>
                }
                else
                {
                    <button type="button" disabled class="btn btn-openid" style="margin:5px;float:right;color:white;text-decoration:none;" title="Document Not Approved">Send <i class="fa fa-spinner fa-spin" id="icnMasterLoading" style="display:none;"></i></button>
                }
            }

            using (Html.BeginForm("Download", "PDFGenerator", FormMethod.Post, new { @class = "", role = "form", @id = "PDFForm" }))
            {
                @Html.HiddenFor(model => model.PDFTools.Content, htmlAttributes: new { @class = "", Value = "", @id = "hdnContent" })
                @Html.HiddenFor(model => model.PDFTools.Headcontent, htmlAttributes: new { @class = "", Value = "", @id = "hdnHeadContent" })
                @Html.HiddenFor(model => model.PDFTools.HeaderText, htmlAttributes: new { @class = "", Value = "PilotSmith" })
                @Html.HiddenFor(model => model.PDFTools.ContentFileName, htmlAttributes: new { @class = "", Value = Model.ProdOrderNo, @id = "hdnContentFileName" })
                @Html.HiddenFor(model => model.PDFTools.CustomerName, htmlAttributes: new
           {
               @class = "",
               Value = Model.Customer.CompanyName @*@id = "hdnCustomerName"*@ })
                @Html.HiddenFor(model => model.PDFTools.IsWithWaterMark, htmlAttributes: new { @id = "hdnWaterMarkFlag" })
                if (Model.LatestApprovalStatus == 4 || Model.LatestApprovalStatus == 0)
                {
                    <button type="submit" class="btn btn-openid" style="margin:5px;float:right;color:white;text-decoration:none;" onclick="DownloadProductionOrder()">Download <i class="fa fa-spinner fa-spin" id="icnMasterLoading" style="display:none;"></i></button>
                }
                else
                {
                    <button type="submit" disabled class="btn btn-openid" style="margin:5px;float:right;color:white;text-decoration:none;" title="Document Not Approved">Download <i class="fa fa-spinner fa-spin" id="icnMasterLoading" style="display:none;"></i></button>
                }
            }
        }
    }
</div>
<script>
    $(document).ready(function () {
        $.validator.unobtrusive.parse('#FormUpdateProductionOrderEmailInfo');
        $.validator.unobtrusive.parse("#FormProductionOrderEmailSend");
        $.validator.unobtrusive.parse("#FormProductionOrderEmailDownload");
        debugger;
        $('#contact').html($('#ContactPerson').text());
        //$("table td input.SelectProduct").each(function () {
        //    $(this).is(':checked') ? $(this).parent('td').remove() : $(this).parent('td').parent('tr').remove();
        //});
        //$('table').find('th:first-child').remove();
    });
</script>
