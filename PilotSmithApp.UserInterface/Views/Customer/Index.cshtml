@model PilotSmithApp.UserInterface.Models.CustomerAdvanceSearchViewModel
@using PilotSmithApp.UserInterface.App_Start
@{
    ViewBag.Title = "Customer";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}
@section styles {
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/DataTables/css/datatable")
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/bootstrapdatepicker")
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/PSAForms")
}


<section class="content" id="main">
    <div class="row">
        <div class="form-group col-md-6">
            <div class="col-md-12">&nbsp;</div>
            <div class="col-md-12">
                <div class="input-group">
                    @Html.EditorFor(model => model.SearchTerm, new { htmlAttributes = new { @class = "form-control newinput", @placeholder = "Search....", @onfocus = "CloseAdvanceSearch()" } })
                    <label class="searchicon" for="textbox">
                        <img src="~/Content/images/advace.png" title="Advance search" onclick="$('.divboxASearch').toggle(10);"/>
                    </label>
                    <div class="input-group-btn">
                        <button class="btn searchbtn" type="submit" onclick="BindOrReloadCustomerTable('Search')"><i class="fa fa-search" style="font-size:18px;"></i></button>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-6" id="btnPatchCustomerList" style="min-height:25px">

            @{
                @Html.Action("ChangeButtonStyle", "Customer", new { actionType = "List" });
            }
        </div>
    </div>
    <div class="divboxASearch">
        <div class="col-md-12 divbox2">
            <div class="col-md-12 headSeperator">Advance search<button type="button" class="close" onclick="CloseAdvanceSearch()"><span aria-hidden="true">×</span></button></div>
            <div class="form-group col-md-12">
                <div class="col-md-6 no-left-padding">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.FromDate, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.FromDate, new { htmlAttributes = new { @class = "form-control newinput datepicker" } })
                    </div>
                </div>
                <div class="col-md-6 no-right-padding">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.ToDate, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.ToDate, new { htmlAttributes = new { @class = "form-control newinput datepicker" } })
                    </div>
                </div>
                <div class="col-md-12 no-padding">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.IsInternalComp, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-12">
                        @{
                            List<SelectListItem> dropdownList = new List<SelectListItem>();
                            dropdownList.Add(new SelectListItem
                            { Text = "No", Value = "false", Selected = true });
                            dropdownList.Add(new SelectListItem
                            { Text = "Yes", Value = "true" });
                        }
                        @Html.DropDownListFor(model => model.IsInternalComp, dropdownList, new { @class = "form-control BlockEnter newinput", style = "padding:4px 12px;", @id = "IsInternalComp" })
                    </div>
                </div>
                <div class="col-md-12">&nbsp;</div>
                <div class="col-md-12 no-left-padding">
                    <div class="col-md-12">
                        <button class="btn searchbtn" type="submit" onclick="BindOrReloadCustomerTable('Search')" style="width: 60px;"><i class="fa fa-search" style="font-size:18px;"></i></button>
                    </div>
                </div>
            </div>
                
                <div class="col-md-12">&nbsp;</div>
            </div>
    </div>
    <div class="row tableContainer">
        <div class="excelExport"></div>
        <div class="col-md-12">
            <table id="tblCustomer" class="table table-striped table-bordered table-hover customgrd" cellspacing="0" style="width:100%;display:none;">
                <thead>
                    <tr class="text-center TableHead">
                        <th style="display:none">ID</th>
                        <th>Company</th>
                        <th>Contact Person</th>
                        <th>Mobile</th>
                        <th>Tax Reg No</th>
                        <th>Pan No</th>
                        <th>Outstanding Amount</th>
                        <th>...</th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>

</section>

<section>
    <div id="myNav" class="overlay">
        <div class="overlay-content">
            <div class="row" id="OverlayHeader">
                <div class="col-md-6" style="text-align:left;left:4%;">
                    <span id="lblCustomerInfo" class="SCHeader">Customer Information</span>
                </div>
                <div class="col-md-6" id="btnPatchCustomerNew" style="min-height:25px; padding-right:25px;">

                </div>
            </div>
            <div class="EntryForms" id="divCustomerForm" style="height:550px">

            </div>
        </div>
    </div>
</section>

@section Scripts {
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/datatable")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/jsZip")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/datatableButtons")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/jqueryunobtrusiveajaxvalidate")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/CustomerJS/Customer")
}

