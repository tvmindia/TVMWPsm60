@model PilotSmithApp.UserInterface.Models.DistrictViewModel

@using (Ajax.BeginForm("InsertUpdateDistrict", "District", null, new AjaxOptions { HttpMethod = "POST", Confirm = "", OnSuccess = "SaveSuccessDistrict", OnFailure = "NetworkFailure", AllowCache = false, LoadingElementId = "", OnBegin = "OnMasterBegin", OnComplete = "OnMasterComplete" }, new { @class = "form-horizontal", role = "form", id = "FormDistrict" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.IsUpdate, htmlAttributes: new { @class = "" })
    @Html.HiddenFor(model => model.Code, htmlAttributes: new { @class = "" })
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group col-md-12 no-padding">
        <div class="col-md-12 no-padding">
            <div class="col-md-12">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label lblrequired" })
            </div>
            <div class="col-md-12">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control newinput" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

        <div class="form-group col-md-12 no-padding">
            <div class="col-md-12 no-padding">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.CountryCode, htmlAttributes: new { @class = "control-label " })
                </div>
                <div class="col-md-12">
                    <div class="divCountrySelectList">
                        <span class="form-control"> <i class="fa fa-spinner fa-spin"> </i></span>
                        @*@Html.Action("CountrySelectList", "Country", new { required = "" })*@
                    </div>
                </div>
                <!-- This hidden field will keep the information whether the field is required or not -->
                @Html.Hidden("hdnCountryRequired", "")
                <!-- This hidden field will keep the information whether the field is disabled or not -->
                @Html.Hidden("hdnCountrydisabled", false)
                @Html.HiddenFor(model => model.CountryCode, htmlAttributes: new { @class = "", @id = "hdnCountryCode" })
            </div>
        </div>

            <div class="form-group col-md-12 no-padding">
                <div class="col-md-12 no-padding">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.StateCode, htmlAttributes: new { @class = "control-label " })
                    </div>
                    <div class="col-md-12">
                        <div class="divStateSelectList">
                            <span class="form-control"> <i class="fa fa-spinner fa-spin"> </i></span>
                            @*@Html.Action("StateSelectList", "State", new { required = "" })*@
                        </div>
                    </div>
                    <!-- This hidden field will keep the information whether the field is required or not -->
                    @Html.Hidden("hdnStateRequired", "")
                    <!-- This hidden field will keep the information whether the field is disabled or not -->
                    @Html.Hidden("hdnStatedisabled", false)
                    @Html.HiddenFor(model => model.StateCode, htmlAttributes: new { @class = "", @id = "hdnStateCode" })
                </div>
            </div>

            <div class="modal-footer d-flex justify-content-center">
                <button class="btn btn-default" type="submit" id="btnSaveMaster" style="margin-right:3%;margin-top:2%">Save Changes <i class="fa fa-spinner fa-spin" id="icnMasterLoading" style="display:none;"></i></button>
            </div>
}
<script>
    $(document).ready(function () {
        $.validator.unobtrusive.parse("#FormDistrict");
        try {
            debugger;
            $('#FormDistrict .divCountrySelectList').load('/Country/CountrySelectList?required=' + $('#FormDistrict #hdnCountryRequired').val(), function () {
                try {
                    $('#FormDistrict .divCountrySelectList #CountryCode').select2({
                        dropdownParent: $("#divModelMasterPopUp2 .divCountrySelectList")
                    });

                    $('#FormDistrict .select2').addClass('form-control newinput');
                    $(document).on('focus', '.select2', function (e) {
                        if (e.originalEvent) {
                            var s2element = $(this).siblings('select');
                            s2element.select2('open');
                            // Set focus back to select2 element on closing.
                            s2element.on('select2:closing', function (e) {
                                s2element.select2('focus');
                            });
                        }
                    });

                    $(document).on("select2-open", function () {
                        $(this).select2('positionDropdown', true);
                    });
                }
                catch (e) {
                    console.log(e.message);
                }

            });
            $('#FormDistrict .divStateSelectList').load('/State/StateSelectList?required=' + $('#FormDistrict #hdnStateRequired').val(), function () {
                try {
                    $('#FormDistrict .divStateSelectList #StateCode').select2({
                        dropdownParent: $("#divModelMasterPopUp2 .divStateSelectList")
                    });

                    $('#FormDistrict .select2').addClass('form-control newinput');
                }
                catch (e) {
                    console.log(e.message);
                }
            });

        }
        catch (e) {
            console.log(e.message);
        }
        //$('#DistrictCode').val($('#hdnDistrictCode').val());
        //try {
        //    $('#StateCode,#DistrictCode,#CountryCode').select2({
        //        dropdownParent: $("#divModelMasterPopUp")
        //    });
        //    $('.select2').addClass('form-control newinput');
        //}
        //catch (e) {
        //    console.log(e.message);
        //}

    });
</script>



