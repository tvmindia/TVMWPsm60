@model PilotSmithApp.UserInterface.Models.QuotationDetailViewModel
<div class="col-md-4 no-padding">
    <div class="col-md-12">
        @Html.LabelFor(model => model.SGSTAmt, htmlAttributes: new { @class = "control-label " })
    </div>
    <div class="col-md-12">
        @Html.EditorFor(model => model.SGSTAmt, new { htmlAttributes = new { @class = "form-control newinput Amount ApplyCurrency", @onkeypress = "return isNumber(event)" } })
        @Html.ValidationMessageFor(model => model.SGSTAmt, "", new { @class = "text-danger" })
    </div>
</div>
<div class="col-md-4 no-padding">
    <div class="col-md-12">
        @Html.LabelFor(model => model.CGSTAmt, htmlAttributes: new { @class = "control-label " })
    </div>
    <div class="col-md-12">
        @Html.EditorFor(model => model.CGSTAmt, new { htmlAttributes = new { @class = "form-control newinput Amount ApplyCurrency", @onkeypress = "return isNumber(event)" } })
        @Html.ValidationMessageFor(model => model.CGSTAmt, "", new { @class = "text-danger" })
    </div>
</div>
<div class="col-md-4 no-padding">
    <div class="col-md-12">
        @Html.LabelFor(model => model.IGSTAmt, htmlAttributes: new { @class = "control-label " })
    </div>
    <div class="col-md-12">
        @Html.EditorFor(model => model.IGSTAmt, new { htmlAttributes = new { @class = "form-control newinput Amount ApplyCurrency", @onkeypress = "return isNumber(event)" } })
        @Html.ValidationMessageFor(model => model.IGSTAmt, "", new { @class = "text-danger" })
    </div>
</div>
